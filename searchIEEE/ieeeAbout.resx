<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>